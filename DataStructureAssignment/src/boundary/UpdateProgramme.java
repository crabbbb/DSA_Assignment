package boundary;

import adt.*;
import control.*;
import entity.*;
import java.util.Iterator;
import utility.*;

/**
 * @author LOH XIN JIE
 */
public class UpdateProgramme extends javax.swing.JFrame {

    private ProgrammeTutorialGrpControl ptgControl;
    private ProgrammeControl pControl;
    private Programme programme;
    // original Tutorial Grp list - for reset use
    private DoublyLinkedList<TutorialGroup> orgTtlGrpList;
    private DoublyLinkedList<TutorialGroup> currentTtlGrpList;
    private DoublyLinkedList<TutorialGroup> readyToAdd;
    private LinkedStack<TutorialGroup> readyToDelete;
    private javax.swing.table.DefaultTableModel model;

    /**
     * Creates new form Update
     *
     * inside the programme must contain programme id
     */
    public UpdateProgramme(Programme programme) {
        this.ptgControl = new ProgrammeTutorialGrpControl();
        this.pControl = new ProgrammeControl();
        this.readyToDelete = new LinkedStack<>();
        this.readyToAdd = new DoublyLinkedList<>();

        // initialize current programme
        this.programme = pControl.getTargetProgramme(programme.getProgrammeID());

        initComponents();

        if (this.programme != null) {
            // get tutorial group to add into the jtable ( prevent point to same value will affect reset and delete function )
            this.orgTtlGrpList = ptgControl.getTtlGrpByPrograme(programme.getProgrammeID());
            this.currentTtlGrpList = ptgControl.getTtlGrpByPrograme(programme.getProgrammeID());

            // add into jtable -> get model first
            model = new javax.swing.table.DefaultTableModel(
                    new Object[][]{},
                    new String[]{
                        "Tutorial Group Id ", "Group Size"
                    }
            ) {
                boolean[] canEdit = new boolean[]{
                    false, false
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            };

            addValueToTable(currentTtlGrpList);
            assignValue();
        } else {
            Message.ErrorMessage("Invalid Programme Data, Unable to Modify Programme Details");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Perpetua Titling MT", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("programme Management subsystem");
        jLabel1.setToolTipText("");
        jLabel1.setAutoscrolls(true);

        jLabel2.setFont(new java.awt.Font("Perpetua Titling MT", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("-- UPDATE PROGRAMME --");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setText("Programe Code                                        : ");

        jLabel4.setText("Programme Name                                    : ");

        jLabel5.setText("Target quantity of student recruitment    : ");

        jLabel6.setText("Description                                                : ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jLabel3)
                .addGap(35, 35, 35)
                .addComponent(jLabel4)
                .addGap(36, 36, 36)
                .addComponent(jLabel5)
                .addGap(38, 38, 38)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jTextField1.setEditable(false);
        jTextField1.setText("jTextField1");
        jTextField1.setFocusable(false);

        jTextField2.setText("jTextField2");

        jTextField3.setText("jTextField3");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField1)
            .addComponent(jTextField2)
            .addComponent(jTextField3)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(78, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jButton3.setBackground(new java.awt.Color(255, 204, 102));
        jButton3.setText("Save Change");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 153, 153));
        jButton4.setText("Cancel");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(255, 255, 153));
        jButton5.setText("Reset");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(588, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(18, 18, 18)
                .addComponent(jButton5)
                .addGap(531, 531, 531))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(37, 37, 37))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tutorial Group Id ", "Group Size"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jButton1.setBackground(new java.awt.Color(153, 255, 153));
        jButton1.setText("Add new Tutorial Group");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 153, 153));
        jButton2.setText("Delete Tutorial Group");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(26, 26, 26)
                .addComponent(jButton1)
                .addGap(20, 20, 20))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Delete Tutorial Group Button
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String tutorialGrpId = Message.InputMessageDialog("Please Enter Tutorial Group No That Need Delete : ");
        if (tutorialGrpId != null && !tutorialGrpId.isEmpty()) {
            TutorialGroup delete = ptgControl.searchTutorialGrpByID(tutorialGrpId.toUpperCase(), currentTtlGrpList);
            // check exist
            if (delete != null) {
                // have exist delete success, update jtable
                currentTtlGrpList.remove(delete);
                readyToDelete.push(delete);

                // remove target from readyToAdd, if exist will be remove else will not happen any
                readyToAdd.remove(delete);

                addValueToTable(currentTtlGrpList);
            } else {
                // no exist
                Message.ErrorMessage("Tutorial Group No doesnot exist");
            }
        } else if (tutorialGrpId != null) {
            // prevent CANCEL hit this message
            // invalid value , empty
            Message.ErrorMessage("Tutorial Group No cannot be empty");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * Save changes button<br>
     * 3 condition for tutorial group
     * <ul>
     * <li>current = empty, original != empty > delete until empty </li>
     * <li>current != empty, original = empty > add only </li>
     * <li>current != empty, original != empty > add and delete</li>
     * <li>current = empty, original = empty > no update need </li>
     * </ul>
     */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // programmeName cannot be empty
        String programmeName;
        // can be empty , optional
        String description;
        // cannot be negative value, cannot be alpha, cannot be empty
        int targetCapacity;

        if ((programmeName = pControl.programmeNameValidate(jTextField2.getText())) != null) {
            description = jTextArea1.getText();
            if ((targetCapacity = pControl.targetCapacityValidate(jTextField3.getText())) != -1) {
                Programme p = new Programme(programme.getProgrammeID(), programmeName, targetCapacity, description);
                if (pControl.updateProgramme(p)) {
                    // programme update success, then update tutorial group
                    if (currentTtlGrpList.isEmpty() && !orgTtlGrpList.isEmpty()) {
                        if (conditionOne()) {
                            Message.InformationMessage("Programme & Tutorial Group Have been successful update !");
                            closeFrame();
                        }
                    } else if (!currentTtlGrpList.isEmpty() && orgTtlGrpList.isEmpty()) {
                        if (conditionTwo()) {
                            Message.InformationMessage("Programme & Tutorial Group Have been successful update !");
                            closeFrame();
                        }
                    } else if (!currentTtlGrpList.isEmpty() && !orgTtlGrpList.isEmpty()) {
                        if (conditionThree()) {
                            Message.InformationMessage("Programme & Tutorial Group Have been successful update !");
                            closeFrame();
                        }
                    } else {
                        // both are empty
                        Message.InformationMessage("Programme & Tutorial Group Have been successful update !");
                        closeFrame();
                    }

                }
            }
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    // current = empty, original != empty > delete until empty
    private boolean conditionOne() {
        DoublyLinkedList<TutorialGroup> unsuccessList = ptgControl.deleteListOfTutorialGrp(orgTtlGrpList);
        if (unsuccessList != null) {
            // have value cannot be added
            String errorMessage = "Tutorial Group that have not been successful delete : \n";
            Iterator<TutorialGroup> iterator = unsuccessList.iterator();

            int i = 1;
            while (iterator.hasNext()) {
                errorMessage += i + ". " + iterator.next().getTutorialGrpId() + "\n";
                i++;
            }

            Message.ErrorMessage(errorMessage);

            return false;
        }

        return true;
    }

    // current != empty, original = empty > add only
    private boolean conditionTwo() {
        DoublyLinkedList<TutorialGroup> unsuccessList = ptgControl.addListOfTutorialGrp(currentTtlGrpList);
        if (unsuccessList != null) {
            // have value cannot be added
            String errorMessage = "Tutorial Group that have not been successful added : \n";
            Iterator<TutorialGroup> iterator = unsuccessList.iterator();

            int i = 1;
            while (iterator.hasNext()) {
                errorMessage += i + ". " + iterator.next().getTutorialGrpId() + "\n";
                i++;
            }

            Message.ErrorMessage(errorMessage);

            return false;
        }

        return true;
    }

    // current != empty, original != empty > add and delete
    private boolean conditionThree() {
        DoublyLinkedList<TutorialGroup> unsuccessDeleteList = new DoublyLinkedList<>();
        DoublyLinkedList<TutorialGroup> unsuccessAddedList = null;

        // delete for stack
        if (readyToDelete != null && !readyToDelete.isEmpty()) {
            // have value start delete
            while (!readyToDelete.isEmpty()) {
                TutorialGroup t = readyToDelete.pop();
                if (orgTtlGrpList.contains(t)) {
                    // exist in list perform delete
                    if (!ptgControl.deleteTutorialGrp(t.getTutorialGrpId())) {
                        unsuccessDeleteList.add(t);
                    }
                }
                // no contain no need go to delete step
            }
        }

        // add
        if (readyToAdd != null && !readyToAdd.isEmpty()) {
            // have value start add
            unsuccessAddedList = ptgControl.addListOfTutorialGrp(readyToAdd);
        }

        // show error when deletelist have data and addedlist have data
        String errorMessage = "";
        if (!unsuccessDeleteList.isEmpty() || (unsuccessAddedList != null && !unsuccessAddedList.isEmpty())) {
            if (!unsuccessDeleteList.isEmpty()) {
                // have value cannot be added
                errorMessage = "Tutorial Group that have not been successful delete : \n";
                Iterator<TutorialGroup> iterator = unsuccessDeleteList.iterator();

                int i = 1;
                while (iterator.hasNext()) {
                    errorMessage += i + ". " + iterator.next().getTutorialGrpId() + "\n";
                    i++;
                }
            }

            if (unsuccessAddedList != null && !unsuccessAddedList.isEmpty()) {
                // have value cannot be added
                errorMessage = "Tutorial Group that have not been successful added : \n";
                Iterator<TutorialGroup> iterator = unsuccessAddedList.iterator();

                int i = 1;
                while (iterator.hasNext()) {
                    errorMessage += i + ". " + iterator.next().getTutorialGrpId() + "\n";
                    i++;
                }
            }

            Message.ErrorMessage(errorMessage);

            return false;
        }

        return true;
    }

    // Cancel button
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (Message.OKOptionMessage("Discard Your change ? ")) {
            closeFrame();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    // Add tutorial Group Button
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // generate Next ID
        String newTutorialGrpID = ptgControl.getNextTutorialID(programme.getProgrammeID(), currentTtlGrpList);
        if (newTutorialGrpID != null) {
            TutorialGroup newEntry = new TutorialGroup(newTutorialGrpID, programme.getProgrammeID());

            // currentTtlGrpList possible be null
            if (currentTtlGrpList == null) {
                currentTtlGrpList = new DoublyLinkedList<>();
            }

            // generate success
            currentTtlGrpList.add(newEntry);
            readyToAdd.add(newEntry);

            // update jtable
            addValueToTable(currentTtlGrpList);
        } else {
            // generate problem
            Message.ErrorMessage("Unable to create a new Tutorial Group");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    // Reset Button
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // reset programme detail, tutorial group, clear stack for delete
        assignValue();
        currentTtlGrpList = orgTtlGrpList;
        addValueToTable(orgTtlGrpList);
        readyToDelete.clear();
        readyToAdd.clear();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void closeFrame() {
        this.dispose();
    }

    private void assignValue() {
        jTextField1.setText(programme.getProgrammeID());
        jTextField2.setText(programme.getProgrammeName());
        jTextField3.setText(programme.getTargetCapacity() + "");
        jTextArea1.setText(programme.getProgrammeDescription());
    }

    private void addValueToTable(DoublyLinkedList<TutorialGroup> tList) {
        jTable1.setRowHeight(30);
        jTable1.setRowMargin(10);
        // clear table
        model.setRowCount(0);

        if (tList != null && tList.size() > 0) {
            // have data inside
            // convert to Object[] and add into table row
            for (Object o : tList.asArray()) {
                Object[] oo = new Object[4];
                // "Code", "Name", "Target Quantity", "Description"
                TutorialGroup t = (TutorialGroup) o;
                oo[0] = t.getTutorialGrpId();
                oo[1] = t.getGroupSize();

                model.addRow(oo);

            }
            jTable1.setModel(model);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateProgramme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateProgramme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateProgramme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateProgramme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateProgramme(new Programme("")).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
